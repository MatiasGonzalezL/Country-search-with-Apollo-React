{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\OneDrive\\\\Escritorio\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CountryQuery } from \"./Query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { Card } from 'react-bootstrap';\nexport const Home = () => {\n  _s();\n\n  const [usuarios, setUsuarios] = useState([]);\n  const [tablaUsuarios, setTablaUsuarios] = useState([]);\n  const [busqueda, setBusqueda] = useState(\"\");\n  const [countrySearched, setCountrySearched] = useState(\"\");\n  const [getCountry, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(CountryQuery, {\n    variables: {\n      name: countrySearched\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }\n  }, \"Error found!\");\n\n  if (data) {\n    console.log(data);\n  }\n\n  const handleChange = e => {\n    setBusqueda(e.target.value); //console.log(\"Busqueda: \"+e.target.value);\n\n    filtrar(e.target.value);\n  };\n\n  const filtrar = terminoBusqueda => {\n    var resultadoBusqueda = data.countries.filter(country => {\n      if (country.name.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())) {\n        return country;\n      }\n    });\n    setUsuarios(resultadoBusqueda);\n  }; //const paisFiltrado = data.map((pais) => pais.name);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div_principal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div_titulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Country search\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Some random text\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input_general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMagnifyingGlass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input_text\",\n    type: \"text\",\n    name: \"code\",\n    placeholder: \"Escribe el pa\\xEDs a buscar\" // onChange={(e) => {\n    //     setCountrySearched(e.target.value)\n    // }}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grupo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Group by:\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getCountry(),\n    type: \"button\",\n    className: \"boton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Continent\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"boton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Language\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Aqu\\xED van los pa\\xEDses\"), data && data.countries.map((country, idx) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      className: \"m-3\",\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, country.name), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, country.code), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, country.currency), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, country.capital), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, country.native), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, country.languages.name), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, country.languages.native), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, country.languages.code), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, country.continent.name), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, country.continent.code)));\n  })));\n};\n\n_s(Home, \"u1ZW1CG3hg5LbXWMpwJrR/MSM6s=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","CountryQuery","FontAwesomeIcon","faMagnifyingGlass","useLazyQuery","Card","Home","usuarios","setUsuarios","tablaUsuarios","setTablaUsuarios","busqueda","setBusqueda","countrySearched","setCountrySearched","getCountry","loading","data","error","variables","name","console","log","handleChange","e","target","value","filtrar","terminoBusqueda","resultadoBusqueda","countries","filter","country","toString","toLowerCase","includes","map","idx","width","code","currency","capital","native","languages","continent"],"sources":["C:/Users/matia/OneDrive/Escritorio/dev-challenge-template-master/kimchechallenge/src/Home.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { CountryQuery} from \"./Query\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\nexport const Home = () => {\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [tablaUsuarios, setTablaUsuarios] = useState([]);\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [countrySearched, setCountrySearched] = useState(\"\");\r\n\r\n    const [getCountry, {loading, data, error}] = useLazyQuery(\r\n        CountryQuery,\r\n        {\r\n            variables: {name: countrySearched},\r\n        }\r\n    );\r\n\r\n    if(error) return <h2>Error found!</h2>\r\n    if(data) {\r\n        console.log(data);\r\n    }\r\n\r\n    const handleChange= e => {\r\n        setBusqueda(e.target.value);\r\n        //console.log(\"Busqueda: \"+e.target.value);\r\n        filtrar(e.target.value);\r\n    }\r\n\r\n    const filtrar=(terminoBusqueda) => {\r\n        var resultadoBusqueda = data.countries.filter((country) => {\r\n            if(country.name.toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n            ){\r\n                return country;\r\n            }\r\n        });\r\n        setUsuarios(resultadoBusqueda);\r\n    };\r\n\r\n    //const paisFiltrado = data.map((pais) => pais.name);\r\n\r\n\r\n    return(\r\n        <div className=\"div_principal\">\r\n            <div className=\"div_titulo\">\r\n                <h1>Country search</h1>\r\n                <h5>Some random text</h5>\r\n            </div>\r\n            <div>\r\n                <form className=\"input_general\">\r\n                    <span id=\"icon\">\r\n                        <FontAwesomeIcon icon={faMagnifyingGlass}></FontAwesomeIcon>\r\n                    </span>\r\n                    <input \r\n                        className=\"input_text\"\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        placeholder=\"Escribe el país a buscar\"\r\n                        // onChange={(e) => {\r\n                        //     setCountrySearched(e.target.value)\r\n                        // }}\r\n                        onChange={handleChange}\r\n                    />\r\n                </form>\r\n            </div>\r\n            <div className=\"grupo\">\r\n                <h2>Group by:</h2>\r\n                <button onClick={() => getCountry()} type=\"button\" className=\"boton\">Continent</button>\r\n                <button type=\"button\" className=\"boton\">Language</button>\r\n            </div>\r\n            <div>\r\n                <h2>Aquí van los países</h2>\r\n                {data && data.countries.map((country, idx) => {\r\n                    return (\r\n                        <Card style={{ width: '18rem' }} className=\"m-3\" key={idx}>\r\n                            <Card.Body>\r\n                                <Card.Title>{country.name}</Card.Title>\r\n                                <Card.Text>{country.code}</Card.Text>\r\n                                <Card.Text>{country.currency}</Card.Text>\r\n                                <Card.Text>{country.capital}</Card.Text>\r\n                                <Card.Text>{country.native}</Card.Text>\r\n                                <Card.Text>{country.languages.name}</Card.Text>\r\n                                <Card.Text>{country.languages.native}</Card.Text>\r\n                                <Card.Text>{country.languages.code}</Card.Text>\r\n                                <Card.Text>{country.continent.name}</Card.Text>\r\n                                <Card.Text>{country.continent.code}</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })}\r\n                {/* {data && data.countries.map((country => country.name)\r\n                    )} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}