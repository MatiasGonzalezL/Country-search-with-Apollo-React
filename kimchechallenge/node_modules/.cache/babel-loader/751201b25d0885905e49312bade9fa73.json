{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CountryQuery } from \"./Query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\nexport const Home = () => {\n  _s();\n\n  const [paises, setPaises] = useState([]);\n  const [tablaUsuarios, setTablaUsuarios] = useState([]);\n  const [busqueda, setBusqueda] = useState(\"\");\n  const [countrySearched, setCountrySearched] = useState(\"\"); // const [getCountry, { loading, data, error }] = useLazyQuery(\n  //     CountryQuery,\n  //     {\n  //         variables: { name: countrySearched },\n  //     }\n  // );\n  // if (error) return <h2>Error found!</h2>\n  // if (data) {\n  //     console.log(data);\n  // }\n  //busqueda\n\n  const buscador = e => {\n    setBusqueda(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(CountryQuery);\n  if (loading) return \"Cargando...\";\n  if (error) return `Error! ${error.meesage}`;\n\n  if (data) {\n    console.log(data);\n  } //traer datos\n  // const showData = async () => {\n  //     const response = await fetch(uri)\n  //     const data = await response.json()\n  //     console.log(data)\n  // }\n  // showData()\n  //busqueda\n  // const buscador = (e) => {\n  //     setBusqueda(e.target.value)\n  // }\n  //filtrado\n\n\n  let resultados = [];\n\n  if (!busqueda) {\n    resultados = data;\n  } else {\n    resultados = data.filter(dato => {\n      dato.name.toLowerCase().includes(busqueda.toLocaleLowerCase());\n    });\n  }\n\n  ; // return (\n  //     <div className=\"div_principal\">\n  //         <div className=\"div_titulo\">\n  //             <h1>Country search</h1>\n  //             <h5>Some random text</h5>\n  //         </div>\n  //         <div>\n  //             <form className=\"input_general\">\n  //                 <span id=\"icon\">\n  //                     <FontAwesomeIcon icon={faMagnifyingGlass}></FontAwesomeIcon>\n  //                 </span>\n  //                 <input\n  //                     className=\"input_text\"\n  //                     type=\"text\"\n  //                     name=\"code\"\n  //                     placeholder=\"Escribe el país a buscar\"\n  //                     value={busqueda}\n  //                     onChange={buscador}\n  //                 />\n  //             </form>\n  //         </div>\n  //         <div className=\"grupo\">\n  //             <h2>Group by:</h2>\n  //             <button  type=\"button\" className=\"boton\">Continent</button>\n  //             <button type=\"button\" className=\"boton\">Language</button>\n  //         </div>\n  //         <div>\n  //             <h2>Aquí van los países</h2>\n  //             <div>\n  //                 {data && data.countries.map((country, idx) => {\n  //                     return (\n  //                         <div className=\"card\" key={idx}>\n  //                             <div className=\"container\">\n  //                                     <h4 className=\"titulo_pais\">{country.emoji} {country.name}</h4>\n  //                                 <div className=\"div1\">\n  //                                     <h6>Code: {country.code}</h6>\n  //                                     <h6>Capital: {country.capital}</h6>\n  //                                     <h6>Native: {country.native}</h6>\n  //                                 </div>\n  //                                 <div className=\"div2\">\n  //                                     <h6>Language: {country.languages.map((language) => language.name)}</h6>\n  //                                     <h6>Language native: {country.languages.map((language) => language.native)}</h6>\n  //                                     <h6>Language code: {country.languages.map((language) => language.code)}</h6>\n  //                                 </div>\n  //                                 <div className=\"div3\">\n  //                                     <h6>Continent: {country.continent.name}</h6>\n  //                                     <h6>Continent code: {country.continent.code}</h6>\n  //                                 </div>\n  //                             </div>\n  //                         </div>\n  //                     )\n  //                 })}\n  //             </div>\n  //         </div>\n  //     </div>\n  // );\n};\n\n_s(Home, \"zZmSJ2eUcXKGiLbVTWHcb/2RxXY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","CountryQuery","FontAwesomeIcon","faMagnifyingGlass","useLazyQuery","useQuery","Home","paises","setPaises","tablaUsuarios","setTablaUsuarios","busqueda","setBusqueda","countrySearched","setCountrySearched","buscador","e","target","value","console","log","loading","data","error","meesage","resultados","filter","dato","name","toLowerCase","includes","toLocaleLowerCase"],"sources":["C:/Users/matia/OneDrive/Escritorio/dev-challenge-template-master/kimchechallenge/src/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CountryQuery } from \"./Query\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport const Home = () => {\r\n    const [paises, setPaises] = useState([]);\r\n    const [tablaUsuarios, setTablaUsuarios] = useState([]);\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [countrySearched, setCountrySearched] = useState(\"\");\r\n\r\n    // const [getCountry, { loading, data, error }] = useLazyQuery(\r\n    //     CountryQuery,\r\n    //     {\r\n    //         variables: { name: countrySearched },\r\n    //     }\r\n    // );\r\n\r\n    // if (error) return <h2>Error found!</h2>\r\n    // if (data) {\r\n    //     console.log(data);\r\n    // }\r\n\r\n    \r\n    //busqueda\r\n     const buscador = (e) => {\r\n        setBusqueda(e.target.value)\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    \r\n    \r\n    const { loading, data, error } = useQuery(CountryQuery);\r\n            \r\n        if (loading) return \"Cargando...\";\r\n        if (error) return `Error! ${error.meesage}`;\r\n        if (data) {\r\n            console.log(data);\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n\r\n    //traer datos\r\n    // const showData = async () => {\r\n    //     const response = await fetch(uri)\r\n    //     const data = await response.json()\r\n    //     console.log(data)\r\n    // }\r\n    // showData()\r\n\r\n\r\n\r\n    //busqueda\r\n    // const buscador = (e) => {\r\n    //     setBusqueda(e.target.value)\r\n    // }\r\n\r\n    //filtrado\r\n    let resultados = []\r\n    if(!busqueda)\r\n    {\r\n        resultados = data\r\n    }else {\r\n        resultados = data.filter((dato) => {\r\n            dato.name.toLowerCase().includes(busqueda.toLocaleLowerCase())\r\n        })\r\n    };\r\n\r\n    // return (\r\n    //     <div className=\"div_principal\">\r\n    //         <div className=\"div_titulo\">\r\n    //             <h1>Country search</h1>\r\n    //             <h5>Some random text</h5>\r\n    //         </div>\r\n    //         <div>\r\n    //             <form className=\"input_general\">\r\n    //                 <span id=\"icon\">\r\n    //                     <FontAwesomeIcon icon={faMagnifyingGlass}></FontAwesomeIcon>\r\n    //                 </span>\r\n    //                 <input\r\n    //                     className=\"input_text\"\r\n    //                     type=\"text\"\r\n    //                     name=\"code\"\r\n    //                     placeholder=\"Escribe el país a buscar\"\r\n    //                     value={busqueda}\r\n    //                     onChange={buscador}\r\n    //                 />\r\n    //             </form>\r\n    //         </div>\r\n    //         <div className=\"grupo\">\r\n    //             <h2>Group by:</h2>\r\n    //             <button  type=\"button\" className=\"boton\">Continent</button>\r\n    //             <button type=\"button\" className=\"boton\">Language</button>\r\n    //         </div>\r\n    //         <div>\r\n    //             <h2>Aquí van los países</h2>\r\n    //             <div>\r\n    //                 {data && data.countries.map((country, idx) => {\r\n    //                     return (\r\n    //                         <div className=\"card\" key={idx}>\r\n    //                             <div className=\"container\">\r\n    //                                     <h4 className=\"titulo_pais\">{country.emoji} {country.name}</h4>\r\n    //                                 <div className=\"div1\">\r\n    //                                     <h6>Code: {country.code}</h6>\r\n    //                                     <h6>Capital: {country.capital}</h6>\r\n    //                                     <h6>Native: {country.native}</h6>\r\n    //                                 </div>\r\n    //                                 <div className=\"div2\">\r\n    //                                     <h6>Language: {country.languages.map((language) => language.name)}</h6>\r\n    //                                     <h6>Language native: {country.languages.map((language) => language.native)}</h6>\r\n    //                                     <h6>Language code: {country.languages.map((language) => language.code)}</h6>\r\n    //                                 </div>\r\n    //                                 <div className=\"div3\">\r\n    //                                     <h6>Continent: {country.continent.name}</h6>\r\n    //                                     <h6>Continent code: {country.continent.code}</h6>\r\n    //                                 </div>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     )\r\n    //                 })}\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n};"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,qBAAvC;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD,CAJsB,CAMtB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAGA;;EACC,MAAMe,QAAQ,GAAIC,CAAD,IAAO;IACrBJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;EACH,CAHA;;EAOD,MAAM;IAAEG,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,IAA2BlB,QAAQ,CAACJ,YAAD,CAAzC;EAEI,IAAIoB,OAAJ,EAAa,OAAO,aAAP;EACb,IAAIE,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACC,OAAQ,EAA/B;;EACX,IAAIF,IAAJ,EAAU;IACNH,OAAO,CAACC,GAAR,CAAYE,IAAZ;EACH,CAjCiB,CAwCtB;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EAEA;;;EACA,IAAIG,UAAU,GAAG,EAAjB;;EACA,IAAG,CAACd,QAAJ,EACA;IACIc,UAAU,GAAGH,IAAb;EACH,CAHD,MAGM;IACFG,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAaC,IAAD,IAAU;MAC/BA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCnB,QAAQ,CAACoB,iBAAT,EAAjC;IACH,CAFY,CAAb;EAGH;;EAAA,CAhEqB,CAkEtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CA1HM;;GAAMzB,I;UA2BwBD,Q;;;KA3BxBC,I"},"metadata":{},"sourceType":"module"}