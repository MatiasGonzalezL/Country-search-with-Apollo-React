{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\OneDrive\\\\Escritorio\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\Home copy.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"apollo-boost\"; //obtener países\n\nconst GET_COUNTRIES = gql`\n  query {\n    country (code: \"CL\"){\n      name\n      code\n      currency\n      capital\n      native\n      languages {\n        name\n        native\n        code\n      }\n      continent {\n        name\n        code\n      }\n    }\n  }\n`;\n\nfunction AppTwo() {\n  // const {data, error, loading} = useQuery(GET_COUNTRIES)\n  // const result = useQuery(GET_COUNTRIES)\n  // console.log(result);\n  // if (error) return <span>{error}</span>\n  // return(\n  //     <div className=\"App\">\n  //         <header className=\"App-header\">\n  //             {/* {loading\n  //                 ? <p>Cargando...</p>\n  //                 : (\n  //                     <>\n  //                         <p>Hola mundo</p>\n  //                         {\n  //                             data.country && data.country.map(country => country.name).join(\", \")\n  //                         }\n  //                     </>\n  //                 )\n  //             } */}\n  //         </header>\n  //     </div>\n  // )\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Hola mundo\"), /*#__PURE__*/React.createElement(Query, {\n    query: GET_COUNTRIES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, _ref => {\n    let {\n      loading,\n      error,\n      data\n    } = _ref;\n    if (loading) return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }\n    }, \"Cargando...\");\n    if (data) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Data from countries\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"Country Name: \", data.country.name));\n  }));\n}\n\n_c = AppTwo;\nexport default AppTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTwo\");","map":{"version":3,"names":["React","useState","useQuery","gql","Query","GET_COUNTRIES","AppTwo","loading","error","data","country","name"],"sources":["C:/Users/matia/OneDrive/Escritorio/dev-challenge-template-master/kimchechallenge/src/Home copy.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./App.css\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {gql} from \"apollo-boost\";\r\nimport {Query} from \"apollo-boost\";\r\n\r\n//obtener países\r\nconst GET_COUNTRIES = gql`\r\n  query {\r\n    country (code: \"CL\"){\r\n      name\r\n      code\r\n      currency\r\n      capital\r\n      native\r\n      languages {\r\n        name\r\n        native\r\n        code\r\n      }\r\n      continent {\r\n        name\r\n        code\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction AppTwo() {\r\n    // const {data, error, loading} = useQuery(GET_COUNTRIES)\r\n\r\n    // const result = useQuery(GET_COUNTRIES)\r\n    // console.log(result);\r\n\r\n\r\n    // if (error) return <span>{error}</span>\r\n\r\n    // return(\r\n    //     <div className=\"App\">\r\n    //         <header className=\"App-header\">\r\n    //             {/* {loading\r\n    //                 ? <p>Cargando...</p>\r\n    //                 : (\r\n    //                     <>\r\n    //                         <p>Hola mundo</p>\r\n    //                         {\r\n    //                             data.country && data.country.map(country => country.name).join(\", \")\r\n    //                         }\r\n    //                     </>\r\n    //                 )\r\n    //             } */}\r\n    //         </header>\r\n    //     </div>\r\n    // )\r\n    return (\r\n        <div>\r\n            <h1>Hola mundo</h1>\r\n            <Query query={GET_COUNTRIES}>\r\n                {({loading, error, data}) =>{\r\n                    if(loading) return (<h1>Cargando...</h1>);\r\n                    if(data) return (\r\n                        <div>\r\n                            <hr/>\r\n                            <h1>Data from countries</h1>\r\n                            <h1>Country Name: {data.country.name}</h1>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Query>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppTwo;\r\n\r\n   "],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB,C,CAEA;;AACA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,SAASG,MAAT,GAAkB;EACd;EAEA;EACA;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADJ,eAEI,oBAAC,KAAD;IAAO,KAAK,EAAED,aAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK,QAA2B;IAAA,IAA1B;MAACE,OAAD;MAAUC,KAAV;MAAiBC;IAAjB,CAA0B;IACxB,IAAGF,OAAH,EAAY,oBAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAAR;IACZ,IAAGE,IAAH,EAAS,oBACL;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,eAEI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,yBAFJ,eAGI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,qBAAmBA,IAAI,CAACC,OAAL,CAAaC,IAAhC,CAHJ,CADK;EAOZ,CAVL,CAFJ,CADJ;AAiBH;;KA3CQL,M;AA6CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}