{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\OneDrive\\\\Escritorio\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport ApolloClient, { gql, InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Home } from \"./Home\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  //uri: \"https://48p1r2roz4.sse.codesandbox.io\",\n  uri: \"https://countries.trevorblades.com\"\n});\nexport async function getStaticProps() {\n  const {\n    data\n  } = await client.query({\n    query: gql`\n      {\n        countries(filter: {continent: {eq: \"EU\"}}) {\n          name\n          currency\n        }\n      }\n    `\n  });\n  return {\n    props: {\n      countries: data.countries\n    }\n  };\n}\n\nconst App = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Home, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}));\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","FontAwesomeIcon","faMagnifyingGlass","ApolloClient","gql","InMemoryCache","ApolloProvider","Home","client","cache","uri","getStaticProps","data","query","props","countries","App"],"sources":["C:/Users/matia/OneDrive/Escritorio/dev-challenge-template-master/kimchechallenge/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMagnifyingGlass} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.css\";\nimport ApolloClient, { gql, InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Home } from \"./Home\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  //uri: \"https://48p1r2roz4.sse.codesandbox.io\",\n  uri: \"https://countries.trevorblades.com\"\n});\n\nexport async function getStaticProps(){\n  const {data} = await client.query({\n    query: gql`\n      {\n        countries(filter: {continent: {eq: \"EU\"}}) {\n          name\n          currency\n        }\n      }\n    `,\n  })\n  return {\n    props: {\n      countries: data.countries,\n    }\n  }\n}\n\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <Home/>\n  </ApolloProvider>\n);\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,iBAAR,QAAgC,mCAAhC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,IAAuBC,GAAvB,EAA4BC,aAA5B,QAAiD,cAAjD;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;EAC9BM,KAAK,EAAE,IAAIJ,aAAJ,EADuB;EAE9B;EACAK,GAAG,EAAE;AAHyB,CAAjB,CAAf;AAMA,OAAO,eAAeC,cAAf,GAA+B;EACpC,MAAM;IAACC;EAAD,IAAS,MAAMJ,MAAM,CAACK,KAAP,CAAa;IAChCA,KAAK,EAAET,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;EARoC,CAAb,CAArB;EAUA,OAAO;IACLU,KAAK,EAAE;MACLC,SAAS,EAAEH,IAAI,CAACG;IADX;EADF,CAAP;AAKD;;AAGD,MAAMC,GAAG,GAAG,mBACV,oBAAC,cAAD;EAAgB,MAAM,EAAER,MAAxB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,oBAAC,IAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF,CADF;;KAAMQ,G;AAMN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}