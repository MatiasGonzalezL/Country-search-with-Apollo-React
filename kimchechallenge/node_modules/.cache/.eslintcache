[{"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\index.js":"1","C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\serviceWorker.js":"2","C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\App.js":"3","C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\Queries.js":"4","C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\Home.js":"5"},{"size":503,"mtime":1652457880528,"results":"6","hashOfConfig":"7"},{"size":5086,"mtime":1647986227000,"results":"8","hashOfConfig":"7"},{"size":466,"mtime":1652803614695,"results":"9","hashOfConfig":"7"},{"size":753,"mtime":1652803528693,"results":"10","hashOfConfig":"7"},{"size":10510,"mtime":1652845655396,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"164j74v",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\index.js",[],[],[],"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\serviceWorker.js",[],[],"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\App.js",[],[],"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\Queries.js",[],[],"C:\\Users\\matia\\OneDrive\\Escritorio\\dev-challenge-template-master\\kimchechallenge\\src\\Home.js",["29","30"],[],"import React, { useState } from \"react\";\r\nimport { DataQuery } from \"./Queries\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport const Home = () => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [paises, setPaises] = useState(true);\r\n    const [continentes,setContinentes] = useState(false);\r\n    const [idiomas,setIdiomas] = useState(false);\r\n    const [botones, setBotones] = useState(false);\r\n    const [botones2, setBotones2] = useState(false);\r\n\r\n\r\n    //traer datos con Usequery\r\n    const { loading, data } = useQuery(DataQuery)\r\n\r\n    if (loading) return <h2 className=\"loading\">Cargando la información...</h2>;\r\n    if (data) {\r\n        var dataquery = data;\r\n        //console.log(dataquery);\r\n    }\r\n\r\n    \r\n    //busqueda general\r\n    const buscador = (e) => {\r\n        setBusqueda(e.target.value)\r\n        console.log(e.target.value);\r\n    }\r\n\r\n\r\n    //botones cambiantes Continent\r\n    const toggleButtons = () => {\r\n        setBotones(!botones);\r\n        setPaises(!paises);\r\n        setIdiomas(idiomas);\r\n        setContinentes(!continentes)\r\n    };\r\n\r\n\r\n    //botones cambiantes Language\r\n    const toggleButtons2 = () => {\r\n        setBotones2(!botones2);\r\n        setPaises(!paises);\r\n        setContinentes(continentes);\r\n        setIdiomas(!idiomas);\r\n    }\r\n\r\n\r\n    //comparar arrays y objetos\r\n    const countriesPaises = dataquery.countriesData;\r\n\r\n    var grupos = [];\r\n    countriesPaises.forEach(pais => {\r\n        pais.languages.map((la) => {\r\n            if (!grupos[la.name]) grupos[la.name] = [];\r\n            grupos[la.name].push(pais);\r\n            return true\r\n        });  \r\n    });\r\n    \r\n    const idiomasFinal = Object.entries(grupos);\r\n\r\n\r\n    return (\r\n        <div className=\"div_principal\">\r\n            <div className=\"div_titulo\">\r\n                <h1>Country search</h1>\r\n                <h5>Some random text</h5>\r\n            </div>\r\n            <div>\r\n                <form className=\"input_general\">\r\n                    <span id=\"icon\">\r\n                        <FontAwesomeIcon icon={faMagnifyingGlass}></FontAwesomeIcon>\r\n                    </span>\r\n                    <input\r\n                        className=\"input_text\"\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        placeholder=\"Escribe el país a buscar\"\r\n                        value={busqueda} \r\n                        onChange={buscador}\r\n                    />\r\n                </form>\r\n            </div>\r\n            <div className=\"grupo\">\r\n                <h2>Group by:</h2>\r\n                <button\r\n                    type=\"checkbox\"\r\n                    className={\"toggle-button \" + (botones ? \"toggle--close\": \"\")}\r\n                    id=\"boton\"  \r\n                    onClick={toggleButtons}\r\n                >Continent\r\n                </button>\r\n                <button\r\n                    type=\"checkbox\"\r\n                    className={\"toggle-button \" + (botones2 ? \"toggle--close2\": \"\")}\r\n                    id=\"boton\"\r\n                    onClick={toggleButtons2}\r\n                >Language\r\n                </button>\r\n            </div>\r\n            <div>\r\n                {continentes ?\r\n                    <div className=\"container2\">\r\n                        {dataquery.continentsData.map((continent, id) => {\r\n                            <h2>Continentes</h2>\r\n                            return (\r\n                                <div className=\"cards\" key={id}>  \r\n                                {continent.countries.filter(user => user.name.toLowerCase().includes(busqueda)) != 0 && <h4 className=\"titulo_continente\">{continent.name}</h4>}                       \r\n                                    {continent && continent.countries.filter(user => user.name.toLowerCase().includes(busqueda)).map((country, idx) => {\r\n                                        return (\r\n                                            <div className=\"card\" key={idx}>\r\n                                                <div className=\"container\">\r\n                                                    <h4 className=\"titulo_pais\">{country.emoji} {country.name}</h4>\r\n                                                    <div className=\"div1\">\r\n                                                        <h6>Code: {country.code}</h6>\r\n                                                        <h6>Capital: {country.capital}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"div2\">\r\n                                                        <h6>Language: {country.languages.map((language) => language.name)}</h6>\r\n                                                        <h6>Language native: {country.languages.map((language) => language.native)}</h6>\r\n                                                        <h6>Language code: {country.languages.map((language) => language.code)}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"div3\">\r\n                                                        <h6>Continent: {country.continent.name}</h6>\r\n                                                        <h6>Continent code: {country.continent.code}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>)\r\n                                    })}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        {idiomas ? <div className=\"container3\">\r\n                            {idiomasFinal && idiomasFinal.map((language, id) => {\r\n                                <h2>Idiomas</h2>\r\n                                return (\r\n                                    <div className=\"cards\" key={id}>\r\n                                        {language[1].filter(user => user.name.toLowerCase().includes(busqueda)) !=0 && <h4 className=\"titulo_idioma\">{language[0]}</h4>}\r\n                                            {language[1].filter(user => user.name.toLowerCase().includes(busqueda)).map((lan, i) => {\r\n                                                return ( \r\n                                                    <div className=\"card\" key={i}>\r\n                                                        <div className=\"container\">\r\n                                                            <h4 className=\"titulo_pais\">{lan.emoji} {lan.name}</h4>\r\n                                                            <div className=\"div1\">\r\n                                                                <h6>Code: {lan.code}</h6>\r\n                                                                <h6>Capital: {lan.capital}</h6>\r\n                                                            </div>\r\n                                                            <div className=\"div2\">\r\n                                                                <h6>Language: {lan.languages.map((language) => language.name)}</h6>\r\n                                                                <h6>Language native: {lan.languages.map((language) => language.native)}</h6>\r\n                                                                <h6>Language code: {lan.languages.map((language) => language.code)}</h6>\r\n                                                            </div>\r\n                                                            <div className=\"div3\">\r\n                                                                <h6>Continent: {lan.continent.name}</h6>\r\n                                                                <h6>Continent code: {lan.continent.code}</h6>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>)\r\n                                            })}\r\n                                    </div>)\r\n                            })}\r\n                        </div>\r\n                            :\r\n                            <>\r\n                                <div className=\"container1\">\r\n                                    {data.countriesData.filter(user => user.name.toLowerCase().includes(busqueda)).map((country, idx) => {\r\n                                        return (\r\n                                            <div className=\"card\" key={idx}>\r\n                                                <div className=\"container\">\r\n                                                    <h4 className=\"titulo_pais\">{country.emoji} {country.name}</h4>\r\n                                                    <div className=\"div1\">\r\n                                                        <h6>Code: {country.code}</h6>\r\n                                                        <h6>Capital: {country.capital}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"div2\">\r\n                                                        <h6>Language: {country.languages.map((language) => language.name)}</h6>\r\n                                                        <h6>Language native: {country.languages.map((language) => language.native)}</h6>\r\n                                                        <h6>Language code: {country.languages.map((language) => language.code)}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"div3\">\r\n                                                        <h6>Continent: {country.continent.name}</h6>\r\n                                                        <h6>Continent code: {country.continent.code}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </>}\r\n            </div>\r\n        </div>);\r\n};",{"ruleId":"31","severity":1,"message":"32","line":112,"column":113,"nodeType":"33","messageId":"34","endLine":112,"endColumn":115},{"ruleId":"31","severity":1,"message":"32","line":145,"column":113,"nodeType":"33","messageId":"34","endLine":145,"endColumn":115},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]